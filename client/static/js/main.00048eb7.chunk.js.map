{"version":3,"sources":["Form.js","People.js","FilterSearch.js","services/communicate.js","Notification.js","index.js"],"names":["Form","props","onSubmit","handleSubmit","value","newName","onChange","handleChange","number","handleChangeNumber","type","People","filterNames","map","person","key","name","onClick","delete","id","FilterSearch","filterName","baseUrl","axios","get","newObject","post","put","Notification","success","className","Message","message","error","ReactDOM","render","useState","persons","setPersons","setNewName","setNumber","setFilterNames","setMessage","fetchData","communicateService","then","data","catch","setTimeout","useEffect","e","filter","toLowerCase","indexOf","target","preventDefault","some","obj","window","confirm","newPersonObject","personId","find","response","console","log","addData","document","getElementById"],"mappings":"mNAgBeA,EAdF,SAACC,GACd,OACI,0BAAMC,SAAUD,EAAME,cACtB,sCACQ,2BAAOC,MAAOH,EAAMI,QAASC,SAAUL,EAAMM,eADrD,iBAEgB,2BAAOH,MAAOH,EAAMO,OAAQF,SAAUL,EAAMQ,sBAE5D,6BACE,4BAAQC,KAAK,UAAb,UCKSC,EAbA,SAACV,GACZ,OACI,oCACCA,EAAMW,YAAYC,KAAI,SAAAC,GAAM,OACzB,wBAAIC,IAAKD,EAAOE,MACb,IACAF,EAAOE,KAFV,MAEmBF,EAAON,OAF1B,MAEoC,4BAAQS,QAAS,kBAAMhB,EAAMiB,OAAOJ,EAAOK,MAA3C,gBCAjCC,EANM,SAACnB,GAClB,OACI,iDAAsB,2BAAOK,SAAUL,EAAMoB,aAA7C,M,gBCFFC,EAAU,eAmBD,EAjBA,WACX,OAAOC,IAAMC,IAAIF,IAgBN,EAZA,SAACG,GACZ,OAAOF,IAAMG,KAAKJ,EAASG,IAWhB,EARA,SAACN,EAAIM,GAChB,OAAOF,IAAMI,IAAN,UAAaL,EAAb,YAAwBH,GAAMM,IAO1B,EAJA,SAACN,GACZ,OAAOI,IAAML,OAAN,UAAgBI,EAAhB,YAA2BH,KCFvBS,G,MAbM,SAAC3B,GAClB,IAAM4B,EAAU,yBAAKC,UAAU,WAAW7B,EAAM8B,QAAQC,SAClDC,EAAQ,yBAAKH,UAAU,SAAS7B,EAAM8B,QAAQC,SAEpD,MAA6B,KAA1B/B,EAAM8B,QAAQC,QAEc,YAAvB/B,EAAM8B,QAAQrB,KAAqBmB,EAAUI,EAG1C,OC2IfC,IAASC,OAAO,mBA9IJ,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTC,EADS,KACAC,EADA,OAEcF,mBAAS,IAFvB,mBAET/B,EAFS,KAEAkC,EAFA,OAGYH,mBAAS,IAHrB,mBAGT5B,EAHS,KAGDgC,EAHC,OAIsBJ,mBAASC,GAJ/B,mBAITzB,EAJS,KAII6B,EAJJ,OAKcL,mBAAS,CAACJ,QAAQ,GAAItB,KAAK,KALzC,mBAKTsB,EALS,KAKAU,EALA,KAQVC,EAAY,WAChBC,IAA4BC,MAAK,SAAAC,GAC/BR,EAAWQ,EAAKA,MAChBL,EAAeK,EAAKA,SAErBC,OAAM,SAAAd,GACLS,EAAW,CAACV,QAAQ,gBAAiBtB,KAAK,UAC1CsC,YAAW,WACTN,EAAW,CAACV,QAAQ,GAAItB,KAAK,OAC5B,SAIPuC,oBAAUN,EAAW,IAsGrB,OACE,6BACE,yCACA,kBAAC,EAAD,CAAcZ,QAASC,IACvB,kBAAC,EAAD,CAAcX,WAbC,SAAA6B,GACjBT,EACEJ,EAAQc,QACN,SAAArC,GAAM,OACiE,IAArEA,EAAOE,KAAKoC,cAAcC,QAAQH,EAAEI,OAAOlD,MAAMgD,sBAUrD,8CACA,kBAAC,EAAD,CACEjD,aAvDe,SAAA+C,GACnBA,EAAEK,iBAGF,GAAKlB,EAAQmB,MAFK,SAAAC,GAAG,OAAIA,EAAIzC,OAASX,KAe/B,CACLqD,OAAOC,QAAP,UAAkBtD,EAAlB,mFACA,IAAMuD,EAAkB,CACtB5C,KAAMX,EACNG,OAAQA,GAEJqD,EAAWxB,EAAQyB,MAAK,SAAAhD,GAAM,OAAIA,EAAOE,OAASX,KAASc,GAnCnEyB,EAoCaiB,EAAUD,GAnCtBf,MAAK,SAAAkB,GACJC,QAAQC,IAAIF,GACZrB,EAAW,CAACV,QAAQ,6BAA8BtB,KAAK,YACrDsC,YAAW,WACXN,EAAW,CAACV,QAAQ,GAAItB,KAAK,OAC5B,QAEJmC,MAAM,kBAAMF,OACZI,OAAO,SAAAd,GAAK,OAAI+B,QAAQC,IAAIhC,MA6B3BM,EAAW,IACXC,EAAU,QAvBkB,EAxDhB,SAAAoB,GACdhB,EAA0BgB,GACzBf,MAAK,SAAAkB,GACJC,QAAQC,IAAIF,GACZrB,EAAW,CAACV,QAAQ,6BAA8BtB,KAAK,YACvDsC,YAAW,WACTN,EAAW,CAACV,QAAQ,GAAItB,KAAK,OAC5B,QAEJmC,MAAM,kBAAMF,OACZI,OAAM,SAAAd,GACLS,EAAW,CAACV,QAAQ,iBAAkBtB,KAAK,UAC3CsC,YAAW,WACTN,EAAW,CAACV,QAAQ,GAAItB,KAAK,OAC5B,QA+CHwD,CAJwB,CACtBlD,KAAMX,EACNG,OAAQA,IAQV+B,EAAW,IACXC,EAAU,MAwCRnC,QAASA,EACTE,aA1Be,SAAA2C,GACnBX,EAAWW,EAAEI,OAAOlD,QA0BhBI,OAAQA,EACRC,mBAxBqB,SAAAyC,GACzBV,EAAUU,EAAEI,OAAOlD,UAyBjB,uCACA,kBAAC,EAAD,CAAQQ,YAAaA,EAAaM,OAhGnB,SAACC,GACfuC,OAAOC,QAAQ,qCAChBf,EAA0BzB,GACzB0B,MAAK,SAAAkB,GACJC,QAAQC,IAAIF,GACZrB,EAAW,CAACV,QAAQ,6BAA8BtB,KAAK,YACzDsC,YAAW,WACTN,EAAW,CAACV,QAAQ,GAAItB,KAAK,OAC5B,QAEFmC,MAAM,kBAAMF,OACZI,OAAM,SAAAd,GACLS,EAAW,CAACV,QAAQ,kDAAmDtB,KAAK,UAC5EsC,YAAW,WACTN,EAAW,CAACV,QAAQ,GAAItB,KAAK,OAC5B,cAsFK,MAASyD,SAASC,eAAe,W","file":"static/js/main.00048eb7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = (props) => {\r\nreturn (\r\n    <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      name: <input value={props.newName} onChange={props.handleChange} />\r\n      phone Number: <input value={props.number} onChange={props.handleChangeNumber} />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n)\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst People = (props) => {\r\n    return (\r\n        <>\r\n        {props.filterNames.map(person => (\r\n            <h4 key={person.name}>\r\n              {\" \"}\r\n              {person.name} - {person.number} - <button onClick={() => props.delete(person.id)}>DELETE</button>\r\n            </h4>\r\n          ))}\r\n          </>\r\n    )\r\n}\r\n\r\nexport default People;","import React from 'react';\r\n\r\nconst FilterSearch = (props) => {\r\n    return (\r\n        <div>filter this name <input onChange={props.filterName}/> </div>\r\n    )\r\n}\r\n\r\nexport default FilterSearch;","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n\r\n}\r\n\r\nconst create = (newObject) => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst Delete = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`);\r\n}\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    create: create,\r\n    update: update,\r\n    delete: Delete\r\n}","import React from \"react\";\r\nimport './index.css'\r\n\r\nconst Notification = (props) => {\r\n    const success = <div className=\"success\">{props.Message.message}</div>\r\n    const error = <div className=\"error\">{props.Message.message}</div>\r\n\r\n    if(props.Message.message !== '') {\r\n        return(\r\n            props.Message.type === 'success' ? success : error\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Form from \"./Form.js\";\nimport People from \"./People.js\";\nimport FilterSearch from \"./FilterSearch.js\";\nimport communicateService from \"./services/communicate.js\";\nimport './index.css'\nimport Notification from './Notification.js';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [filterNames, setFilterNames] = useState(persons);\n  const [message, setMessage] = useState({message:'', type:''})\n\n\n  const fetchData = () => {\n    communicateService.getAll().then(data => {\n      setPersons(data.data);\n      setFilterNames(data.data);\n    })\n    .catch(error => {\n      setMessage({message:'Error Occured', type:'error'})\n      setTimeout(() => {\n        setMessage({message:'', type:''})\n      }, 5000) \n    })\n  };\n\n  useEffect(fetchData, []);\n\n  const addData = newPersonObject => {\n    communicateService.create(newPersonObject)\n    .then(response => {\n      console.log(response)\n      setMessage({message:'Person Added Successfully!', type:'success'})\n      setTimeout(() => {\n        setMessage({message:'', type:''})\n      }, 5000)  ;\n    })\n    .then (() => fetchData())\n    .catch(error => {\n      setMessage({message:'Error Occured!', type:'error'})\n      setTimeout(() => {\n        setMessage({message:'', type:''})\n      }, 5000) \n    })\n  };\n\n  const deleteData = (id) => {\n    if(window.confirm('Are You Sure You Want to Delete?')) {\n      communicateService.delete(id)\n      .then(response => {\n        console.log(response);\n        setMessage({message:'Data Deleted Successfully!', type:'success'})\n      setTimeout(() => {\n        setMessage({message:'', type:''})\n      }, 5000)  \n      })\n      .then (() => fetchData())\n      .catch(error => {\n        setMessage({message:'Person already deleted! Please Refresh The Page', type:'error'})\n        setTimeout(() => {\n          setMessage({message:'', type:''})\n        }, 5000) \n      })\n  }\n}\n\n\n  const updateData = (id, newObject) => {\n    communicateService.update(id, newObject)\n    .then(response => {\n      console.log(response);\n      setMessage({message:'Data Updated Successfully!', type:'success'})\n        setTimeout(() => {\n        setMessage({message:'', type:''})\n      }, 5000) \n    })\n    .then (() => fetchData())\n    .catch (error => console.log(error))\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const checkName = obj => obj.name === newName;\n\n    if (!persons.some(checkName)) {\n      const newPersonObject = {\n        name: newName,\n        number: number\n      };\n      addData(newPersonObject);\n\n      // setPersons(persons.concat(newPersonObject));\n      // setFilterNames(filterNames.concat(newPersonObject))\n      // The method below also works\n      //setPersons([...persons, newPersonObject]);\n      setNewName(\"\");\n      setNumber(\"\");\n    } else {\n      window.confirm(`${newName} is already added to phonebook. Replace the old phone number with the new one?`);\n      const newPersonObject = {\n        name: newName,\n        number: number\n      };\n      const personId = persons.find(person => person.name === newName).id\n      updateData(personId, newPersonObject)\n      \n      setNewName(\"\");\n      setNumber(\"\");\n    }\n  };\n\n  const handleChange = e => {\n    setNewName(e.target.value);\n  };\n\n  const handleChangeNumber = e => {\n    setNumber(e.target.value);\n  };\n\n  const filterName = e => {\n    setFilterNames(\n      persons.filter(\n        person =>\n          person.name.toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1\n      )\n    );\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification Message={message}/>\n      <FilterSearch filterName={filterName} />\n      <h2>add a new user</h2>\n      <Form\n        handleSubmit={handleSubmit}\n        newName={newName}\n        handleChange={handleChange}\n        number={number}\n        handleChangeNumber={handleChangeNumber}\n      />\n      <h2>Numbers</h2>\n      <People filterNames={filterNames} delete={deleteData}/>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}